spring.application.name=inventories-service

server.port=8081
#datasource properties
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/microdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update

#api key value
security.api.key=${INVENTORY_API_KEY:key-inventory}
products.api.key=${PRODUCTS_API_KEY:key}

#clients
products.host=${PRODUCTS_HOST:http://localhost:8080}

#healt cheks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

#resiliencia retry
resilience4j.retry.instances.productRetry.max-attempts=3
resilience4j.retry.instances.productRetry.ignore-exceptions=feign.FeignException.NotFound

#resiliencia circuitbreaker
resilience4j.circuitbreaker.instances.productCircuitBreaker.sliding-window-size=5
resilience4j.circuitbreaker.instances.productCircuitBreaker.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.productCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.productCircuitBreaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.productCircuitBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.productCircuitBreaker.slow-call-duration-threshold=2s
resilience4j.circuitbreaker.instances.productCircuitBreaker.slow-call-rate-threshold=60
resilience4j.circuitbreaker.instances.productCircuitBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.productCircuitBreaker.ignore-exceptions=feign.FeignException.NotFound
